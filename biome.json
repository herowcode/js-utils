{
  "$schema": "https://biomejs.dev/schemas/2.1.4/schema.json",
  "vcs": {
    "enabled": false,
    "clientKind": "git",
    "useIgnoreFile": false
  },
  "files": {
    "ignoreUnknown": false,
    "includes": ["src/**/*.ts", "tests/**/*.ts"]
  },
  "formatter": {
    "enabled": true,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineWidth": 80
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "style": {
        "useTemplate": "error",
        "useImportType": "error",
        "noParameterAssign": "error",
        "useAsConstAssertion": "error",
        "useDefaultParameterLast": "error",
        "useEnumInitializers": "error",
        "useSelfClosingElements": "error",
        "useConst": "error",
        "useSingleVarDeclarator": "error",
        "noUnusedTemplateLiteral": "error",
        "useNumberNamespace": "error",
        "noInferrableTypes": "error",
        "noUselessElse": "error",
        "useNamingConvention": {
          "level": "error",
          "options": {
            "strictCase": false,
            "conventions": [
              {
                "selector": {
                  "kind": "interface"
                },
                "match": "I(.*)|(.*?)Error",
                "formats": ["PascalCase"]
              },
              {
                "selector": {
                  "kind": "typeAlias"
                },
                "match": "T(.*)|(.*?)Error",
                "formats": ["PascalCase"]
              },
              {
                "selector": {
                  "kind": "objectLiteralProperty"
                },
                "formats": [
                  "camelCase",
                  "snake_case",
                  "CONSTANT_CASE",
                  "PascalCase"
                ]
              },
              {
                "selector": {
                  "kind": "enum"
                },
                "match": "E(.*)|(.*?)Error",
                "formats": ["PascalCase"]
              },
              {
                "selector": {
                  "kind": "enumMember"
                },
                "formats": ["CONSTANT_CASE"]
              }
            ]
          }
        }
      },
      "correctness": {
        "noUnusedVariables": "warn",
        "noUnusedImports": "error"
      }
    }
  },
  "javascript": {
    "formatter": {
      "indentStyle": "space",
      "indentWidth": 2,
      "quoteStyle": "double",
      "semicolons": "asNeeded",
      "lineEnding": "lf"
    }
  },
  "assist": {
    "enabled": true,
    "actions": {
      "source": {
        "organizeImports": "on"
      }
    }
  }
}
